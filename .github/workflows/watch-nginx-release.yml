name: Watch Nginx

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  watch_new_release:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get-latest-release.outputs.new_version }}
      is_new_version: ${{ steps.check-docker-hub.outputs.is_new_version }}
    steps:
      - name: Get latest release version
        id: get-latest-release
        run: |
          new_version=$(curl -s https://nginx.org/en/download.html | grep -oP 'nginx-\K[0-9.]+(?=</a>)' | head -n 1)

          echo "Current Official version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Check if new version exists on docker hub
        id: check-docker-hub
        run: |
          echo "Checking if $new_version exists on docker hub"
          if curl -s "https://hub.docker.com/v2/repositories/library/nginx/tags/${{ steps.get-latest-release.outputs.new_version }}" | grep -q 'not found'; then
            echo "New version ${{ steps.get-latest-release.outputs.new_version }} does not exist on docker hub"
            echo "is_new_version=true" >> $GITHUB_OUTPUT
          else
            echo "New version ${{ steps.get-latest-release.outputs.new_version }} already exists on docker hub"
            echo "is_new_version=false" >> $GITHUB_OUTPUT
          fi

  release_new_version:
    needs: watch_new_release
    if: needs.watch_new_release.outputs.is_new_version == 'true'
    uses: ./.github/workflows/release.yml
    with:
      build_context: './Docker/nginx'
      docker_image_name: nginx
      docker_tag: ${{ needs.watch_new_release.outputs.new_version }}
      build_args: VERSION=${{ needs.watch_new_release.outputs.new_version }}
      build_platforms: ${{'linux/arm64,linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8' }}
    secrets: inherit  